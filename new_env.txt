conda create --name myenv python=3.8
torch>=1.8
pip install torch==1.7.1+cu110 torchvision==0.8.2+cu110 torchaudio==0.7.2 -f https://download.pytorch.org/whl/torch_stable.html(不行,因為ModuleNotFoundError: No module named 'torch.utils._pytree')
pip install torch==1.8.1+cu111 torchvision==0.9.1+cu111 torchaudio==0.8.1 -f https://download.pytorch.org/whl/torch_stable.html


conda install -c conda-forge ninja

--------------------------
在terminal
pip install tensorboard==2.2.1
pip install matplotlib==3.2.1

安裝dlib:
pip install cmake
pip install boost
conda install -c conda-forge dlib
pip install --upgrade pip setuptools wheel
pip install opencv-python==4.5.5.64

--------------------------
pip uninstall protobuf
pip install protobuf==3.19.0
pip uninstall numpy
pip install numpy==1.19.5


--------------------------
FADING:
pip install diffusers-0.10.0.tar.gz
pip install transformers-4.40.2.tar.gz
fsspec-2024.3.1.tar.gz(不用)
huggingface_hub-0.23.0.tar.gz(不用)



--------------------------
D:\SAM-master\datasets\images_dataset.py有改

lib/python3.6/site-packages/torch/utils/cpp_extension.py 裡的['ninja','-v'] 改成˙['ninja','--version']

D:\SAM-master\models\stylegan2\model.py 裡的有錯https://github.com/rosinality/stylegan2-pytorch/issues/81
加入
from torch.nn import functional as F
class FusedLeakyReLU(nn.Module):
    def __init__(self, channel, negative_slope=0.2, scale=2 ** 0.5):
        super().__init__()

        self.bias = nn.Parameter(torch.zeros(channel))
        self.negative_slope = negative_slope
        self.scale = scale

    def forward(self, input):
        return fused_leaky_relu(input, self.bias, self.negative_slope, self.scale)


def fused_leaky_relu(input, bias, negative_slope=0.2, scale=2 ** 0.5):
    return scale * F.leaky_relu(input + bias.view((1, -1) + (1,) * (len(input.shape) - 2)),
                                negative_slope=negative_slope)

def upfirdn2d_native(
    input, kernel, up_x, up_y, down_x, down_y, pad_x0, pad_x1, pad_y0, pad_y1
):
    input = input.permute(0, 2, 3, 1)
    _, in_h, in_w, minor = input.shape
    kernel_h, kernel_w = kernel.shape
    out = input.view(-1, in_h, 1, in_w, 1, minor)
    out = F.pad(out, [0, 0, 0, up_x - 1, 0, 0, 0, up_y - 1])
    out = out.view(-1, in_h * up_y, in_w * up_x, minor)

    out = F.pad(
        out, [0, 0, max(pad_x0, 0), max(pad_x1, 0), max(pad_y0, 0), max(pad_y1, 0)]
    )
    out = out[
        :,
        max(-pad_y0, 0) : out.shape[1] - max(-pad_y1, 0),
        max(-pad_x0, 0) : out.shape[2] - max(-pad_x1, 0),
        :,
    ]

    out = out.permute(0, 3, 1, 2)
    out = out.reshape(
        [-1, 1, in_h * up_y + pad_y0 + pad_y1, in_w * up_x + pad_x0 + pad_x1]
    )
    w = torch.flip(kernel, [0, 1]).view(1, 1, kernel_h, kernel_w)
    out = F.conv2d(out, w)
    out = out.reshape(
        -1,
        minor,
        in_h * up_y + pad_y0 + pad_y1 - kernel_h + 1,
        in_w * up_x + pad_x0 + pad_x1 - kernel_w + 1,
    )
    # out = out.permute(0, 2, 3, 1)
    return out[:, :, ::down_y, ::down_x]

def upfirdn2d(input, kernel, up=1, down=1, pad=(0, 0)):
    # out = UpFirDn2d.apply(
    #     input, kernel, (up, up), (down, down), (pad[0], pad[1], pad[0], pad[1])
    # )
    out = upfirdn2d_native(input, kernel, up, up, down, down, pad[0], pad[1], pad[0], pad[1])
    return out

刪掉原本的from models.stylegan2.op import FusedLeakyReLU, fused_leaky_relu, upfirdn2d
